1. Overview of Spring Data Repositories

Benefits of Using Spring Data Repositories:

Automatic Implementation: Spring Data JPA automatically provides the implementation for standard CRUD operations through the JpaRepository interface, so you don't need to write the implementation yourself.
Derived Query Methods: You can define query methods by simply declaring them in your repository interfaces, using method names to create queries dynamically.
Pagination and Sorting: Spring Data JPA supports pagination and sorting out of the box.
Custom Queries: You can define custom queries using the @Query annotation or using Spring Dataâ€™s Query DSL.
Integration with Spring Context: Repositories are managed by the Spring context, making dependency injection straightforward.
2. Creating Repositories
1. Create EmployeeRepository Interface:


Location: src/main/java/com/example/employeemanagement/repository/EmployeeRepository.java

Definition:

java
Copy code
package com.example.employeemanagement.repository;

import com.example.employeemanagement.model.Employee;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface EmployeeRepository extends JpaRepository<Employee, Long> {

    List<Employee> findByName(String name);


    Employee findByEmail(String email);


    List<Employee> findByDepartmentId(Long departmentId);
}
Explanation:

findByName(String name): Finds a list of employees by their name.
findByEmail(String email): Finds a single employee by their email.
findByDepartmentId(Long departmentId): Finds a list of employees associated with a specific department.


2. Create DepartmentRepository Interface:

Location: src/main/java/com/example/employeemanagement/repository/DepartmentRepository.java

Definition:

java
Copy code
package com.example.employeemanagement.repository;

import com.example.employeemanagement.model.Department;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface DepartmentRepository extends JpaRepository<Department, Long> {

    Department findByName(String name);
}
Explanation:

findByName(String name): Finds a department by its name.